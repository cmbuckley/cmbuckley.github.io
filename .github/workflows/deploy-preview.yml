name: Netlify deploy-preview success
on:
  workflow_dispatch:
    inputs:
      issue:
        description: Issue number
      log:
        description: Netlify log URL

jobs:
  notify:
    name: Notify about deployment
    runs-on: ubuntu-latest
    steps:
      - name: Create deployment
        id: deployment
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN_MANAGE_ENVS }}
        run: |
          ref=$(gh pr view ${{ github.event.inputs.issue }} --json headRefOid -q .headRefOid)
          env=staging-${{ github.event.inputs.issue }}
          url=https://$env.cmbuckley.co.uk
          echo "url=$url" >> $GITHUB_OUTPUT

          # create environment, deployment and success status
          gh api -X PUT repos/{owner}/{repo}/environments/$env
          deployment=$(gh api repos/{owner}/{repo}/deployments \
            -f ref=$ref \
            -f environment=$env \
            -F required_contexts[]=netlify/{owner}/deploy-preview -q .id)
          gh api -X POST repos/{owner}/{repo}/deployments/$deployment/statuses \
            -f state=success \
            -f environment_url=$url

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.inputs.issue }}
          comment-author: 'github-actions[bot]'
          body-includes: Deploy Preview ready

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.inputs.issue }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            ### <span aria-hidden="true">âœ…</span> Deploy Preview ready!

            |      Name      | Link                                |
            |----------------|-------------------------------------|
            | Deploy Preview | ${{ steps.deployment.outputs.url }} |
            | Deploy Log     | ${{ github.event.inputs.log }}      |
